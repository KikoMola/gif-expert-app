{"version":3,"sources":["helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/AddCategory.js","GifExpertApp.js","index.js"],"names":["getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","useState","loading","state","setState","useEffect","then","imgs","useFetchGifs","AddCategory","setCategories","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","alert","type","value","onChange","target","GifExpertApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAAaA,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAE2BC,UAAUH,GAFrC,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sD,OCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACtB,ECFwB,SAACA,GACzB,MAA0BoB,mBAAS,CAC/Bb,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACNzB,EAAQC,GAAUyB,MAAK,SAACC,GACpBH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGlB,CAACrB,IAEGsB,EDb0BK,CAAa3B,GAAjCa,EAAb,EAAQN,KAAac,EAArB,EAAqBA,QAErB,OACI,qCACI,6BAAKrB,IACJqB,GAAW,2CACZ,qBAAKL,UAAU,8CAAf,SACKH,EAAOJ,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,a,OEX7BiB,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAC3B,EAAoCT,mBAAS,IAA7C,mBAAOU,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC3BP,GAAc,SAAAQ,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,KAEdO,MAAM,uCAMV,SACI,uBACIC,KAAK,OACLC,MAAOV,EACPW,SApBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,aCDlBG,EAAe,WACxB,MAAoCvB,mBAAS,CAAC,kBAA9C,mBAAOiB,EAAP,KAAmBR,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACKQ,EAAW5B,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAASA,SAAUA,GAAeA,YCRtD4C,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.5afd62a2.chunk.js","sourcesContent":["export const getGifs = async (category) => {\r\n    const url =\r\n        `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=CTBCvWu0HV84mNvzXv3etWoKzj9ismu0`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading...</p>}\r\n            <div className=\"card-grid animate__animated animate__fadeIn\">\r\n                {images.map((img) => (\r\n                    <GifGridItem key={img.id} {...img} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then((imgs) => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false,\r\n            });\r\n        });\r\n    }, [category]);\r\n\r\n    return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setInputValue(\"\");\r\n        } else {\r\n            alert(\"Please enter a valid category name\");\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { GifGrid } from \"./components/GifGrid\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState([\"Dragon Ball Z\"]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {categories.map((category) => (\r\n                    <GifGrid category={category} key={category} />\r\n                ))}\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <GifExpertApp />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}